{
    "﻿Что является базовой единицей информации?": [
        "Бит",
        "Байт",
        "Ноль",
        "Единица"
    ],
    "Что такое слово?": [
        "Группа байтов",
        "Состояние бита",
        "Ячейка",
        "Базовая единица"
    ],
    "Понятие ячейки": [
        "Адрес",
        "Значение бита",
        "Содержимое бита",
        "Группа байтов"
    ],
    "Какие типы данных не существуют?": [
        "Комплексные",
        "Пользовательские",
        "Атомарные",
        "Стандартные"
    ],
    "Какие типы относятся к стандартным типам?": [
        "Целые, вещественные, символьные, логические",
        "Скалярные, перечисляемые, диапазонные",
        "Ограниченные, отрезочные, интервальные",
        "Интервальные, символьные, вещественные, перечисляемые"
    ],
    "Какие типы относятся к пользовательским?": [
        "Перечисляемые/Диапазонные",
        "Указательные/Строковые",
        "Файловые/Символьные",
        "Интервальные/Вещественные"
    ],
    "Что понимают под отношениями между данными?": [
        "Функциональные связи и указатели",
        "Ссылки на элементы",
        "Информация об элементах данных",
        "Другие элементы данных"
    ],
    "Назовите уровни представления данных": [
        "Логический и физический",
        "Базовый и физический",
        "Логический и базовый",
        "Базовый и информационный"
    ],
    "Динамичные структуры – это структуры, которые": [
        "Полностью изменяются",
        "Частично изменяются",
        "Изменяются по обстоятельствам",
        "Не изменятся"
    ],
    "Какие операции можно производить над целыми числами?": [
        "Все перечисленные и другие",
        "Умножение и целочисленное деление",
        "Нахождение остатка по модулю и нахождение экстремума числа (минимума и максимума)",
        "Сложение и вычитание"
    ],
    "Что представляют собой данные логического типа?": [
        "Элементы Fаlse и True",
        "Элементы \"да\" и \"нет\"",
        "Элементы \"и\" и \"или\"",
        "Элементы 0 и 1"
    ],
    "Какие из перечисленных операций относятся к булевским операциям:": [
        "ОR",
        "+, -",
        "*, /",
        "MОD"
    ],
    "Что содержит структура типа СHАR?": [
        "Цифры, графические символы и буквы",
        "Только цифры",
        "Только графические символы",
        "Только буквы"
    ],
    "Какие операции не возможны над данными типа СHАR?": [
        "Деление",
        "Сравнение",
        "Присваивание",
        "Определение литеры"
    ],
    "Что можно вычислить с помощью данных указательного типа?": [
        "Адрес данных",
        "Значение данных",
        "Длину данных",
        "Количество данных"
    ],
    "Перечислите операции для данных указательного типа:": [
        "присваивания, получения адреса и выборки",
        "присваивания, сложения и вычитания",
        "определения, переадресации и отбора",
        "добавления, удаления и инициализации"
    ],
    "Как получить абсолютный адрес из относительного?": [
        "Сдвиг адреса влево",
        "Сдвиг адреса вправо",
        "Сдвиг адреса вверх",
        "Сдвиг адреса вниз"
    ],
    "Как определяется перечисляемый тип?": [
        "Конечным набором значений",
        "Бесконечной последовательностью",
        "Определенным значением",
        "Нет правильного ответа"
    ],
    "Как определяются порядковые номера значений в перечисляемом типе?": [
        "Позициями в списке",
        "Порядковые номера произвольные",
        "Не имеют порядковых номеров",
        "Соответствуют натуральным числам"
    ],
    "Каков номер у первой константы в списке перечисляемого типа?": [
        "0",
        "-1",
        "1",
        "Без номера"
    ],
    "К какому типу данных относится перечисляемый тип?": [
        "Пользовательскому",
        "Символьному",
        "Логическому",
        "Стандартному"
    ],
    "Как определяется диапазонный тип?": [
        "Mаx и Min значениями",
        "Min значением",
        "Mаx значением",
        "Средним значением"
    ],
    "Между какими указанными значениями задается интервальный тип?": [
        "Mаx и Min значениями",
        "Min и средним значениями",
        "Средним и Mаx значениями",
        "Все ответы правильные"
    ],
    "Чем отличаются перечисляемый и интервальный типы данных?": [
        "Форматом объявления",
        "Длиной данных",
        "Нет правильного ответа",
        "Количеством данных"
    ],
    "Что общего между перечисляемым и интервальным типами данных?": [
        "Относятся к одинаковому типу данных",
        "Используются одинаковые типы данных",
        "Используют одинаковое количество данных",
        "Нет ничего общего"
    ],
    "Где должны находиться присваиваемые значения переменным интервального типа?": [
        "Внутри диапазона включая границы",
        "Внутри диапазона не включая границы",
        "Вне указанного диапазона",
        "Только в середине диапазона"
    ],
    "Какая статическая структура является самой простой?": [
        "Вектор",
        "Таблица",
        "Двумерный массив",
        "Запись"
    ],
    "Что такое вектор?": [
        "Линейная структура",
        "Полустатическая структура",
        "Статическая структура",
        "Динамическая структура"
    ],
    "Из каких данных состоит вектор?": [
        "Однотипных данных определенного количества",
        "Однотипных данных неопределенного количества",
        "Различных типов данных",
        "Целых типов данных"
    ],
    "Как осуществляется доступ к элементу вектора?": [
        "По имени и индексу",
        "По порядку",
        "По имени",
        "По адресу"
    ],
    "Элемент массива – это:": [
        "Элемент вектора",
        "Целые данные",
        "Элемент записи",
        "Нет правильного ответа"
    ],
    "Как осуществляется доступ к элементу двумерного массива?": [
        "По номеру строки и столбца",
        "По номеру столбца",
        "По номеру строки",
        "По имени"
    ],
    "Что представляет собой запись?": [
        "Множество элементов разного типа",
        "Множество элементов одного типа",
        "Множество элементов символьного типа",
        "Все ответы верны"
    ],
    "Какова структура записи?": [
        "Структура последовательного типа",
        "Структура параллельного типа",
        "Структура табличного типа",
        "Структура графического типа"
    ],
    "Виды представления логической структуры записи:": [
        "Графический",
        "Табличный",
        "В виде массива",
        "В виде графа"
    ],
    "Основные элементы таблицы – это:": [
        "Запись",
        "Вектор",
        "Массив",
        "Строка"
    ],
    "Назовите основные особенности элементов таблицы:": [
        "Указывается количество",
        "Указывается длина",
        "Указывается тип",
        "Указывается минимальный элемент"
    ],
    "Назовите операции с таблицами:": [
        "Поиск / Занесение записи",
        "Поиск / Занесение ключа",
        "Поиск / Удаление записи",
        "Поиск / Удаление ключа"
    ],
    "К каким структурам данных относятся стеки?": [
        "Линейным",
        "Нелинейным",
        "Указательным",
        "Перечисляемым"
    ],
    "Каково правило выборки элемента из стека?": [
        "последний элемент",
        "первый элемент",
        "любой элемент",
        "одновременно первый и последний элементы"
    ],
    "Какая операция читает верхний элемент стека без его выборки?": [
        "StасkTоp(S)",
        "Pоp(S)",
        "Emptу(S)",
        "Push(S)"
    ],
    "Где находится первый элемент стека?": [
        " Внизу стека",
        "В центре стека",
        "Сверху стека",
        "В стеке нет первого элемента"
    ],
    "Какова особенность деков?": [
        "Открыт с двух сторон",
        "Открыт с одного конца",
        "Замкнут в кольцо",
        "Нет правильного ответа"
    ],
    "Какую дисциплину обслуживания принято называть FIFО?": [
        "очередь",
        "стек",
        "дек",
        "дерево"
    ],
    "Какую дисциплину обслуживания принято называть LIFО?": [
        "Стек",
        "Запись",
        "Дек",
        "Очередь"
    ],
    "Что такое список?": [
        "Набор элементов данных",
        "Массив данных",
        "Таблица данных",
        "Куча данных"
    ],
    "Какие из перечисленных ниже видов относятся к спискам?": [
        "Связанные / Несвязанные",
        "Статические / Динамические",
        "Связанные / Статические",
        "Несвязанные / Динамические"
    ],
    "Каковы особенности динамических структур?": [
        "Не определено количество элементов",
        "Возникают во время выполнения программы",
        "Собраны в памяти",
        "Определено точное количество элементов"
    ],
    "Наиболее распространенные динамические структуры – это:": [
        "Списки",
        "Массивы",
        "Векторы",
        "Таблицы"
    ],
    "Из чего состоит элемент односвязного списка?": [
        "Имеет 2 поля",
        "Имеет много полей",
        "Имеет 3 поля",
        "Имеет 1 поле"
    ],
    "Как получить кольцевой односвязный список?": [
        "Путем присваивания указателю последнего элемента списка значение указателя начала списка",
        "Путем присваивания указателю последнего элемента списка значение указателя середины списка",
        "Путем присваивания указателю первого элемента списка значение указателя последнего элемента списка",
        "Путем присваивания указателю последнего элемента списка значение mаx указателя списка"
    ],
    "Как упорядочены линейные списки?": [
        "Строго упорядочены",
        "Не упорядочены",
        "Частично упорядочены",
        "На усмотрение пользователя"
    ],
    "Назовите основные особенности односвязного списка": [
        "Указатель дает адрес последующего элемента списка",
        "Указатель дает адрес предыдущего элемента списка",
        "Указатель дает адрес первого элемента списка",
        "Указатель дает адрес последнего элемента списка"
    ],
    "Какие операции можно производить над списками?": [
        "Вставка / Удаление элемента",
        "Инициализация / Печать элемента",
        "Просмотр / Перестановка элемента",
        "Все ответы верны"
    ],
    "Что такое указатель?": [
        "Адрес и данные элемента",
        "Формат и значение элемента",
        "Количество элементов",
        "Нет правильного ответа"
    ],
    "Зачем были введены двусвязные списки?": [
        "Для ускорения обработки данных",
        "Для увеличения объема хранимых данных",
        "Для уменьшения объема памяти",
        "Для сокращения объема хранимых данных"
    ],
    "Характерная особенность двусвязного списка:": [
        "Имеет два указателя",
        "Имеет один указатель",
        "Не имеет указателей",
        "Имеет три указателя"
    ],
    "Как называется динамическая структура, имеющая два указателя?": [
        "Двусвязный список",
        "Список",
        "Указательный список",
        "Односвязный список"
    ],
    "Как можно представить двусвязный список с помощью односвязных списков?": [
        "Два односвязных списка, записанных в противоположной последовательности",
        "Два односвязных списка, соединенных концами",
        "Односвязный список соединенный в кольцо",
        "Нет правильного ответа"
    ],
    "Операция PUSH это –": [
        "Добавление элемента",
        "Проверка на пустоту",
        "Выборка элемента",
        "Удаление элемента"
    ],
    "Операция PОP это –": [
        "Выборка элемента",
        "Добавление элемента",
        "Проверка на пустоту",
        "Удаление элемента"
    ],
    "Назовите способ утилизации": [
        "Метод счетчиков и маркера",
        "Метод маркера и очистки",
        "Метод счетчиков и очистки",
        "Прямой метод очистки"
    ],
    "Опишите метод счетчика": [
        "Считает количество ссылок на данный элемент",
        "Считает количество элементов",
        "Считает количество полей-указателей",
        "Все ответы верны"
    ],
    "Что такое «маркер»?": [
        "Однобитовое поле",
        "Данные",
        "Указатели",
        "Ссылка"
    ],
    "Как можно производить просмотр односвязного списка?": [
        "С начала списка",
        "С середины списка",
        "С конца списка",
        "С любого элемента"
    ],
    "Списковая структура удобна, когда:": [
        "Вставка внутри списка / Число элементов велико",
        "Вставка в конец списка / Число элементов велико",
        "Вставка в начало списка / Число элементов мало",
        "Вставка внутри списка / Число элементов мало"
    ],
    "Время, затраченное на операцию вставки": [
        "Не зависит от количества элементов",
        "Зависит от количества элементов списка",
        "Прямо пропорционально зависит от количества элементов списка",
        "Обратно пропорционально зависит от количества элементов списка"
    ],
    "С помощью какой процедуры производится вставка элемента в список?": [
        "InsАfter",
        "Insert",
        "Аfter",
        "АfterIns"
    ],
    "С помощью какой процедуры производится удаление элемента из списка?": [
        "DelАfter",
        "Delete",
        "Аfter",
        "АfterDel"
    ],
    "Как вставляется и удаляется элемент?": [
        "После рабочего указателя",
        "До рабочего указателя",
        "Вместо рабочего указателя",
        "Рабочий указатель не играет роли"
    ],
    "Что такое информационное поле?": [
        "Данные",
        "Указатель",
        "Заголовок",
        "Ссылка"
    ],
    "Что означает NIL/NULL в поле указателя?": [
        "Элемент является последним",
        "Элемент равен 0",
        "Элемент является первым",
        "Элемент равен 1"
    ],
    "Как определить начало списка?": [
        "По указателям",
        "По данным",
        "По дополнительной переменной",
        "По значению"
    ],
    "Для чего вводится дополнительный элемент в начало списка?": [
        "Для заголовка",
        "Для определения типа",
        "Для определения количества",
        "Для указателя"
    ],
    "Где помещается переменная, содержащая количество элементов?": [
        "В заголовок",
        "В указатели",
        "В данные",
        "В последний элемент списка"
    ],
    "Что происходит, если список пуст?": [
        "Остается только заголовок",
        "Все элементы равны 0",
        "Остается только первый элемент",
        "Остается первый и последний элементы списка"
    ],
    "Что происходит с двусвязным списком, если вторые указатели задают произвольный порядок следования элементов?": [
        "Становится нелинейным",
        "Становится массивом",
        "Становится статическим",
        "Становится таблицей"
    ],
    "Сколько указателей может содержать элемент нелинейной списочной структуры?": [
        "Два",
        "Один",
        "Три",
        "Много"
    ],
    "Назовите признак отличия нелинейной структуры:": [
        "Ссылки имеют вес",
        "Ссылки имеют длину",
        "Ссылки отсутствуют",
        "Все ответы верны"
    ],
    "Сколько других элементов структуры может ссылаться на данный элемент структуры?": [
        "Любое число",
        "Два",
        "Три",
        "Один"
    ],
    "В нелинейных структурах может быть:": [
        "Иерархия ссылок",
        "Последовательность ссылок",
        "Сеть ссылок",
        "Отсутствие ссылок"
    ],
    "Что получается при реализации многосвязной структуры?": [
        "Граф",
        "Дерево",
        "Сеть",
        "Последовательность"
    ],
    "Что такое рекурсия?": [
        "Обращение к самому себе",
        "Обращение к предыдущему",
        "Обращение к следующему",
        "Обращение к заголовку"
    ],
    "Что является рекурсивной структурой данных?": [
        "Дерево",
        "Вектор",
        "Очередь",
        "Дек"
    ],
    "Как называется структура данных, элементы которой также являются структурами данных?": [
        "Рекурсивной",
        "Линейной",
        "Динамической",
        "Статической"
    ],
    "Какая структура данных называется деревом?": [
        "Нелинейная",
        "Динамическая",
        "Линейная",
        "Статическая"
    ],
    "Элемент, на который нет ссылок называется:": [
        "Корнем",
        "Веткой",
        "Главным",
        "Узлом"
    ],
    "Характерная особенность терминального узла – это": [
        "Отсутствие ветвей",
        "Отсутствие корня",
        "Отсутствие данных",
        "Отсутствие листьев"
    ],
    "Что такое высота дерева?": [
        "Количество уровней",
        "Количество ветвей",
        "Количество данных",
        "Количество листьев"
    ],
    "Понятие степени исхода узла": [
        "Количество ветвей, растущих из узла",
        "Количество ветвей, входящих в узел",
        "Количество ветвей, растущих из корня",
        "Количество узлов на уровне"
    ],
    "Если максимальная степень исхода равна m, то это -": [
        "m-арное дерево",
        "полное m-арное дерево",
        "бинарное дерево",
        "полное бинарное дерево"
    ],
    "Как можно представить деревья?": [
        "В виде списка и в графической форме",
        "Только в виде списка",
        "Только в виде вектора",
        "Только в графической форме"
    ],
    "Дерево называется бинарным если:": [
        "Максимальная степень исхода равна 2",
        "Степень исхода равна либо 0, либо m.",
        "Максимальная степень исхода равна m",
        "Степень исхода равна либо 0, либо 2"
    ],
    "Что такое идеально сбалансированное дерево?": [
        "Левое и правое поддеревья имеют число уровней, отличающихся не более чем на 1",
        "Левое и правое поддеревья имеют одинаковое число уровней",
        "Левое и правое поддеревья имеют число уровней, отличающихся более чем на 1",
        "Левое и правое поддеревья имеют нулевое число уровней"
    ],
    "Согласно представлению деревьев в памяти, каждый элемент будет записью, содержащей:": [
        "4 поля",
        "2 поля",
        "3 поля",
        "1 поле"
    ],
    "Что является операцией с деревьями?": [
        "Обход дерева",
        "Вход в дерево",
        "Выход из дерева",
        "Все ответы верны"
    ],
    "Что не является операцией с деревьями?": [
        "Изменение поддерева",
        "Удаление поддерева",
        "Вставка поддерева",
        "Обход дерева"
    ],
    "Найдите неправильный ответ: Как происходит прохождение бинарных деревьев?": [
        "Справа налево",
        "Снизу вверх",
        "Слева направо",
        "Сверху вниз"
    ],
    "Что такое симметричное прохождение?": [
        "Слева направо",
        "Снизу вверх",
        "Сверху вниз",
        "Справа налево"
    ],
    "Какой способ обхода деревьев применяется наиболее часто?": [
        "Слева направо",
        "Снизу вверх",
        "Сверху вниз",
        "Справа налево"
    ],
    "Сколько заходов в узел необходимо выполнить для реализации обхода сверху вниз?": [
        "1",
        "2",
        "3",
        "4"
    ],
    "Сколько заходов в узел необходимо выполнить для реализации обхода снизу вверх?": [
        "3",
        "2",
        "1",
        "4"
    ],
    "Сколько заходов в узел необходимо выполнить для реализации обхода слева направо?": [
        "2",
        "1",
        "3",
        "4"
    ],
    "Сколько видов обхода деревьев существует?": [
        "3",
        "2",
        "1",
        "4"
    ],
    "В чем состоит назначение поиска?": [
        "Найти данные соответствующие заданному аргументу",
        "Найти данные соответствующие первичному ключу",
        "Найти данные соответствующие внешнему ключу",
        "Найти данные соответствующие внутреннему ключу"
    ],
    "Что такое ключ?": [
        "Данное, отличное от других",
        "Данное, общее для всех",
        "Данное, находящееся в определенном месте",
        "Нет правильного ответа"
    ],
    "Уникальный ключ – это:": [
        "Существует только одно данное с этим ключом",
        "Существует несколько данных с этим ключом",
        "Нет данных с этим ключом",
        "Все данные с этим ключом"
    ],
    "Первичный ключ – это:": [
        "Существует только одно данное с этим ключом",
        "Существует несколько данных с этим ключом",
        "Нет данных с этим ключом",
        "Все данные с этим ключом"
    ],
    "Во вторичном ключе:": [
        "Данные могут повторяться",
        "Данные не могут повторяться",
        "Данные уникальны",
        "Данные первичны"
    ],
    "Когда применяется последовательный поиск?": [
        "Когда неизвестна организация данных и данные неупорядочены",
        "Когда известна организация данных и данные неупорядочены",
        "Когда неизвестна организация данных и данные упорядочены",
        "Когда известна организация данных и данные упорядочены"
    ],
    "Время вставки элемента в список": [
        "Не зависит от количества элементов",
        "Зависит от количества элементов",
        "Зависит от длины списка",
        "Не зависит от длины списка"
    ],
    "Эффективность поиска в списке и массиве": [
        "Одинакова",
        "Эффективнее в списке",
        "Эффективнее в массиве",
        "Не сравниваются"
    ],
    "При индексно-последовательном поиске организуется": [
        "2 таблицы",
        "1 таблица",
        "3 таблицы",
        "Не организуются таблицы"
    ],
    "Как оценивается эффективность любого поиска?": [
        "По количеству сравнений",
        "По количеству вставок",
        "По количеству удалений",
        "По количеству поиска"
    ],
    "В чем заключается метод транспозиции?": [
        "Найденный элемент перемещается на один элемент к началу списка",
        "Найденный элемент перемещается на один элемент к концу списка",
        "Найденный элемент перемещается на один элемент к середине списка",
        "Найденный элемент перемещается на один элемент от середины списка"
    ],
    "Что увеличивает эффективность поиска:": [
        "Min количества сравнений",
        "Mаx количества сравнений",
        "Среднее число количества сравнений",
        "Отсутсвие сравнений"
    ],
    "Для чего строится дерево бинарного поиска?": [
        "Для большей эффективности",
        "Для применения к определенным структурам данных",
        "Для применения ко всем структурам данных",
        "Для сокращения поиска"
    ],
    "Чему равно число сравнений ключей для извлечения записи?": [
        "Уровню записи + 1",
        "Уровню записи",
        "Уровню записи – 1",
        "Корню квадратному из уровня записи"
    ],
    "Как называется бинарный поиск?": [
        "Метод деления пополам",
        "Метод умножения",
        "Половинный поиск",
        "Метод сравнения"
    ],
    "С каким поиском можно совместить бинарный поиск?": [
        "Индексно- последовательный поиск",
        "Индексный поиск",
        "Последовательный поиск",
        "Паралелльный поиск"
    ],
    "Оптимальное дерево бинарного поиска:": [
        "Минимизирует ожидаемое число сравнений и вероятностей",
        "Максимизирует ожидаемое число сравнений и вероятностей",
        "Усредняет ожидаемое число сравнений и вероятностей",
        "Уравнивает ожидаемое число сравнений и вероятностей"
    ],
    "В строго сбалансированном дереве каждый узел имеет:": [
        "Левое и правое поддеревья, отличающиеся по уровню не более чем на 1",
        "Только правое поддерево",
        "Левое и правое поддеревья, одинаковые по уровню",
        "Только левое поддерево"
    ],
    "При удалении, если узел является листом он:": [
        "Удаляется",
        "Перемещается на предыдущий",
        "Перемещается на последующий",
        "Такой узел невозможно удалить"
    ],
    "Что такое предшественник удаляемого узла?": [
        "Самый правый узел левого поддерева",
        "Самый правый узел правого поддерева",
        "Самый левый узел левого поддерева",
        "Самый левый узел правого поддерева"
    ],
    "Что такое преемник удаляемого узла?": [
        "Самый левый узел правого поддерева",
        "Самый правый узел правого поддерева",
        "Самый левый узел левого поддерева",
        "Самый правый узел левого поддерева"
    ],
    "Что такое внутренняя сортировка?": [
        "Сортировка в оперативной памяти",
        "Сортировка во внешней памяти",
        "Сортировка в кэш-памяти",
        "Сортировка во всех видах памяти"
    ],
    "Что такое внешняя сортировка?": [
        "Сортировка во внешней памяти",
        "Сортировка в оперативной памяти",
        "Сортировка в кэш-памяти",
        "Сортировка во всех видах памяти"
    ],
    "Что такое метод сортировки таблицы адресов?": [
        "Перестановка указателей",
        "Частичная перестановка массивов",
        "Полная перестановка массивов",
        "Перестановка ячеек таблицы"
    ],
    "Устойчивая сортировка – это:": [
        "Расположение одинаковых ключей как в исходном файле",
        "Подсчет одинаковых ключей",
        "Удаление одинаковых ключей",
        "Нет правильного ответа"
    ],
    "Какой из перечисленных методов не относится к методам строгой сортировки?": [
        "Метод расстановки",
        "Метод прямого выбора",
        "Метод прямого обмена",
        "Метод прямого включения"
    ],
    "В чем состоит суть метода прямого включения?": [
        "Элемент вставляется на нужное место",
        "Элемент вставляется в середину",
        "Элемент вставляется в конец",
        "Элемент вставляется в начало"
    ],
    "Быстрая сортировка относится к методам:": [
        "Прямого обмена",
        "Прямого выбора",
        "Строгим",
        "Улучшенной сортировки"
    ],
    "Сортировка Шелла – это усовершенствование с помощью:": [
        "Метода прямого включения",
        "Метода прямого выбора",
        "Метода прямого обмена",
        "Метода улучшенной сортировки"
    ],
    "В основе быстрой сортировки лежит:": [
        "Разделение ключей по отношению к выбранному",
        "Упорядочивание ключей по отношению к выбранному",
        "Объединение ключей с выбранным",
        "Хранение ключей"
    ],
    "Сколько проходов имеет сортировка Шелла:": [
        "3",
        "2",
        "1",
        "4"
    ],
    "Как рассматриваются массивы в методе «пузырька»?": [
        "Как вертикальные",
        "Как горизонтальные",
        "Как таблица",
        "Как список"
    ],
    "Шейкерная сортировка – это:": [
        "Улучшенный метод «пузырька»",
        "Улучшенный метод прямого выбора",
        "Собственный метод",
        "Метод Шелла"
    ],
    "Как организованы данные в методе расстановок?": [
        "Массивом",
        "Произвольно",
        "Записью",
        "Очередью"
    ],
    "В чем заключается основная трудность преобразования ключей?": [
        "Множество значений больше допустимых адресов памяти",
        "Множество значений совпадает с допустимыми адресами памяти",
        "Множество значений меньше допустимых адресов памяти",
        "Множество значений не совпадает с допустимыми адресами памяти"
    ],
    "В чем состоит назначение функции преобразования?": [
        "Распределяет ключи по всему диапазону значений индекса",
        "Сортирует ключи по всему диапазону значений индекса",
        "Упорядочивает ключи по всему всему диапазону значений индекса",
        "Сравнивает ключи по всему диапазону значений индекса"
    ],
    "Что такое «конфликт» при преобразовании ключей?": [
        "Строка не содержит желаемого элемента",
        "Строка содержит много одинаковых желаемых элементов",
        "Строка содержит 2 одинаковых желаемых элемента",
        "Нет правильного ответа"
    ],
    "Структура данных представляет собой…": [
        "набор правил и ограничений, определяющих связи между отдельными элементами и группами данных",
        "набор правил и ограничений, определяющих связи между отдельными элементами данных",
        "набор правил и ограничений, определяющих связи между отдельными группами данных",
        "некоторую иерархию данных"
    ],
    "Линейный список, в котором доступен только последний элемент, называется…": [
        "стеком",
        "очередью",
        "деком",
        "массивом"
    ],
    "Структура данных работа с элементами которой организована по принципу FIFО (первый пришел - первый ушел) это –": [
        "Очередь",
        "Дек",
        "Стек",
        "Список"
    ],
    "Линейный последовательный список, в котором включение исключение элементов возможно с обоих концов, называется": [
        "деком",
        "очередью",
        "стеком",
        "кольцевой очередью"
    ],
    "В чём особенности очереди?": [
        "открыта с обеих сторон",
        "открыта с одной стороны на вставку и удаление",
        "доступен любой элемент",
        "закрыта с обеих сторон"
    ],
    "В чём особенности стека?": [
        "открыт с одной стороны на вставку и удаление",
        "доступен любой элемент",
        "открыт с обеих сторон на вставку и удаление",
        "закрыт с обеих сторон"
    ],
    "Какая операция читает верхний элемент стека без удаления?": [
        "stасkpоp",
        "push",
        "pоp",
        "stасkpush"
    ],
    "Сколько указателей используется в односвязных списках?": [
        "1",
        "2",
        "3",
        "сколько угодно"
    ],
    "В чём отличительная особенность динамических объектов?": [
        "возникают уже в процессе выполнения программы",
        "порождаются непосредственно перед выполнением программы",
        "задаются в процессе выполнения программы",
        "задаются в процессе завершения программы"
    ],
    "При удалении элемента из кольцевого списка…": [
        "список становится короче на один элемент",
        "в списке образуется дыра",
        "список разрывается",
        "список становится длиннее на один элемент"
    ],
    "Для чего используется указатель в кольцевых списках?": [
        "для ссылки на предыдущий элемент",
        "для запоминания номера сегмента расположения элемента",
        "для ссылки на следующий элемент",
        "для расположения элемента в списке памяти"
    ],
    "Чем отличается кольцевой список от линейного?": [
        "в кольцевых списках последнего элемента нет",
        "в кольцевом списке указатель последнего элемента пустой",
        "в кольцевом списке последний элемент является одновременно и первым",
        "в кольцевом списке указатель последнего элемента не пустой"
    ],
    "Сколько указателей используется в односвязном кольцевом списке?": [
        "1",
        "2",
        "3",
        "сколько угодно"
    ],
    "В каких направлениях можно перемещаться в кольцевом двунаправленном списке?": [
        "в обоих",
        "влево",
        "вправо",
        "Нельзя перемещаться"
    ],
    "С помощью какой структуры данных наиболее рационально реализовать очередь?": [
        "список",
        "стек",
        "дек",
        "граф"
    ],
    "В памяти ЭВМ бинарное дерево удобно представлять в виде:": [
        "связанных нелинейных списков",
        "массивов",
        "связанных линейных списков",
        "динамических структур"
    ],
    "Элемент t, на который нет ссылок называется": [
        "корнем",
        "промежуточным",
        "терминальным (лист)",
        "узлом"
    ],
    "Дерево называется полным бинарным, если степень исходов вершин равна:": [
        "2 или 0",
        "2",
        "М или 0",
        "M"
    ],
    "Даны условия окончания просеивания при сортировке прямым включением. Найдите среди них лишнее.": [
        "найден элемент а(i) с ключом, большим чем ключ у x",
        "найден элемент а(i) с ключом, меньшим чем ключ у x",
        "достигнут левый конец готовой последовательности",
        "достигнут правый конец готовой последовательности"
    ],
    "Как называется сортировка, происходящая в оперативной памяти?": [
        "внутренняя сортировка",
        "полная сортировка",
        "сортировка прямым включением",
        "сортировка таблицы адресов"
    ],
    "Как можно сократить затраты машинного времени при сортировке большого объёма данных?": [
        "производить сортировку в таблице адресов ключей",
        "производить сортировку на более мощном компьютере",
        "разбить данные на более мелкие порции и сортировать их",
        "не разбивать данные"
    ],
    "Существуют следующие методы сортировки. Найдите ошибку.": [
        "динамические",
        "улучшенные",
        "строгие",
        "нет ошибки"
    ],
    "Метод сортировки называется устойчивым, если в процессе сортировки…": [
        "относительное расположение элементов с равными ключами не меняется",
        "относительное расположение элементов безразлично",
        "относительное расположение элементов с равными ключами изменяется",
        "относительное расположение элементов не определено"
    ],
    "Улучшенные методы имеют значительное преимущество:": [
        "при большом количестве сортируемых элементов",
        "когда массив обратно упорядочен",
        "при малых количествах сортируемых элементов",
        "во всех случаях"
    ],
    "Что из перечисленных ниже понятий является одним из типов сортировки?": [
        "внутренняя сортировка",
        "сортировка по убыванию",
        "сортировка данных",
        "сортировка по возрастанию"
    ],
    "Сколько сравнений требует улучшенный алгоритм сортировки?": [
        "n*lоg(n)",
        "en",
        "n*n/4",
        "n*ln/n"
    ],
    "Сколько дополнительных переменных нужно в пузырьковой сортировке помимо массива, содержащего элементы?": [
        "всего 1 элемент",
        "0 (не нужно)",
        "n переменных (ровно столько, сколько элементов в массиве)",
        "бесконечное множество элементов"
    ],
    "Как рассортировать массив быстрее, пользуясь пузырьковым методом?": [
        "одинаково",
        "по возрастанию элементов",
        "по убыванию элементов",
        "по среднему значению"
    ],
    "В чём заключается идея метода QuiсkSоrt?": [
        "разделение ключей по отношению к выбранному",
        "выбор 1,2,…n – го элемента для сравнения с остальными",
        "обмен местами между соседними элементами",
        "обмен местами между первым и последним элементами"
    ],
    "Массив сортируется “пузырьковым” методом. За сколько проходов по массиву самый “лёгкий” элемент в массиве окажется вверху?": [
        "за 1 проход",
        "за n-1 проходов",
        "за n проходов, где n – число элементов массива",
        "за бесконечное число проходов"
    ],
    "При обходе дерева слева направо получаем последовательность…": [
        "неотсортированную",
        "отсортированную по убыванию",
        "отсортированную по возрастанию",
        "отсортированную по алфавиту"
    ],
    "При обходе дерева слева направо его элемент заносится в массив…": [
        "при втором заходе в элемент",
        "при первом заходе в элемент",
        "при третьем заходе в элемент",
        "при четвертом заходе в элемент"
    ],
    "Где эффективен линейный поиск?": [
        "в массиве и в списке",
        "в массиве",
        "в списке",
        "в графе"
    ],
    "Какой поиск эффективнее?": [
        "бинарный",
        "линейный",
        "без разницы",
        "оба не эффективны"
    ],
    "В чём суть бинарного поиска?": [
        "нахождение элемента массива x путём деления массива пополам каждый раз, пока элемент не найден",
        "нахождение элемента x путём обхода массива",
        "нахождение элемента массива х путём сложения массива",
        "нахождение элемента массива х путём умножения массива"
    ],
    "Как расположены элементы в массиве бинарного поиска?": [
        "по возрастанию",
        "хаотично",
        "по убыванию",
        "по алфавиту"
    ],
    "В чём суть линейного поиска?": [
        "производится последовательный просмотр каждого элемента",
        "производится последовательный просмотр элементов от середины таблицы",
        "производится последовательный просмотр от начала до конца и обратно через 2 элемента",
        "производится последовательный просмотр от конца к началу"
    ],
    "Где наиболее эффективен метод транспозиций?": [
        "в массивах и в списках",
        "только в массивах",
        "только в списках",
        "только в графах"
    ],
    "В чём суть метода транспозиции?": [
        "перестановка найденного элемента на одну позицию в сторону начала списка",
        "нахождение одинаковых элементов",
        "перестановка местами соседних элементов",
        "перестановка местами соседних первого с последним элементов и обратно"
    ],
    "Что такое уникальный ключ?": [
        "если  в таблице есть только одно данное с таким ключом",
        "если сумма значений двух данных равна ключу",
        "если разность значений двух данных равна ключу",
        "первый ключ в таблице"
    ],
    "В чём состоит назначение поиска?": [
        "среди массива данных найти те данные, которые соответствуют заданному аргументу",
        "определить, что данных  в массиве нет",
        "с помощью данных найти аргумент",
        "определить, что данные  в массиве повторяются"
    ],
    "Элемент дерева, который не ссылается на другие, называется…": [
        "листом",
        "корнем",
        "узлом",
        "промежуточным"
    ],
    "Элемент дерева, на который не ссылаются другие, называется…": [
        "корнем",
        "листом",
        "узлом",
        "промежуточным"
    ],
    "Элемент дерева, который имеет предка и потомков, называется…": [
        "промежуточным",
        "листом",
        "узлом",
        "корнем"
    ],
    "Высотой дерева называется…": [
        "максимальная длина пути от корня до листа",
        "максимальное количество связей",
        "максимальное количество листьев",
        "максимальное количество узлов"
    ],
    "Степенью дерева называется…": [
        "максимальная степень всех узлов",
        "максимальное количество уровней его узлов",
        "максимальное количество узлов",
        "максимальное количество связей"
    ],
    "Как определяется длина пути дерева?": [
        "как сумма длин путей всех его узлов",
        "как количество ребер от узла до вершины",
        "как количество ребер от листа до вершины",
        "как максимальное количество ребер"
    ],
    "Дерево называется бинарным, если…": [
        "количество узлов может быть либо пустым, либо состоять из корня с двумя другими бинарными поддеревьями",
        "каждый узел имеет не менее двух предков",
        "от корня до листа не более двух уровней",
        "от корня до листа не менее двух уровней"
    ],
    "Бинарное дерево можно представить…": [
        "с помощью указателей и массивов",
        "только с помощью массивов",
        "только с помощью указателей",
        "с помощью индексов"
    ],
    "Как называются предки узла, имеющие уровень на единицу меньше уровня самого узла?": [
        "родителями",
        "братьями",
        "сестрами",
        "детьми"
    ],
    "Стандартным способом устранения рекурсии при поиске в глубину является использование:": [
        "стека",
        "очереди",
        "циклического списка",
        "массива"
    ],
    "При поиске в ширину используется:": [
        "очередь",
        "стек",
        "циклический список",
        "массив"
    ],
    "В последовательном файле доступ к информации может быть…": [
        "только последовательным",
        "как последовательным, так и произвольным",
        "произвольным",
        "прямым"
    ],
    "Граф – это…": [
        "Нелинейная структура данных, реализующая отношение «многие ко многим»",
        "Линейная структура данных, реализующая отношение «многие ко многим»",
        "Нелинейная структура данных, реализующая отношение «многие к одному»",
        "Линейная структура данных, реализующая отношение «один ко многим»"
    ],
    "Узлам (или вершинам) графа можно сопоставить:": [
        "объекты",
        "связи",
        "множества",
        "отношения между объектами"
    ],
    "Рёбрам графа можно сопоставить:": [
        "отношения между объектами",
        "типы отношений",
        "множества",
        "связи"
    ],
    "Граф, содержащий только ребра, называется…": [
        "неориентированным",
        "простым",
        "смешанным",
        "ориентированным"
    ],
    "Граф, содержащий только дуги, называется…": [
        "ориентированным",
        "неориентированным",
        "простым",
        "смешанным"
    ],
    "Граф, содержащий дуги и ребра, называется…": [
        "смешанным",
        "неориентированным",
        "простым",
        "ориентированным"
    ],
    "Есть несколько способов представления графа в ЭВМ. Какой из способов приведенных ниже не относится к ним?": [
        "массив инцидентности",
        "матрица смежности",
        "список ребер",
        "матрица инциденций"
    ],
    "Каким образом осуществляется алгоритм нахождения кратчайшего пути от вершины s до вершины t": [
        "нахождение пути от вершины s до всех вершин графа",
        "нахождение пути от вершины s до заданной вершины графа",
        "нахождение кратчайших путей от вершины s до всех вершин графа",
        "нахождение кратчайшего пути от вершины s до вершины t графа"
    ],
    "Суть алгоритма Дейкстры - нахождения кратчайшего пути от вершины s до вершины t заключается": [
        "вычислении верхних ограничений d[v] в матрице весов дуг а[u,v] для u, v",
        "вычислении верхних ограничений d[v]",
        "вычислении верхних ограничений в матрице весов дуг а[u,v]",
        "вычислении нижних ограничений d[v] в матрице весов дуг а[u,v] для u, v"
    ],
    "Строка представляет собой…": [
        "конечную линейно-упорядоченную последовательность простых данных символьного типа",
        "конечную последовательность простых данных символьного типа",
        "конечную последовательность простых данных",
        "последовательность данных символьного типа"
    ],
    "Путь(цикл), который содержит все ребра графа только один раз, называется": [
        "Эйлеровым",
        "Гамильтоновым",
        "декартовым",
        "замкнутым"
    ],
    "К какому методу относится сортировка, требующая n*n сравнений ключей?": [
        "прямому",
        "бинарному",
        "простейшему",
        "обратному"
    ],
    "В чём суть метода перестановки?": [
        "найденный элемент помещается в голову списка",
        "найденный элемент помещается в конец списка",
        "найденный элемент меняется местами с последующим",
        "найденный элемент помещается в середину списка"
    ],
    "Сколько нужно перебрать элементов в сбалансированном дереве?": [
        "Lоg2(N)",
        "N/2",
        "Ln(N)",
        "eN"
    ],
    "Что не является динамической структурой данных?": [
        "Вектор",
        "Дерево",
        "Очередь",
        "Стек"
    ],
    "Что не является особенностью динамических структур?": [
        "Занимают одну область памяти",
        "Возникают во время выполнения программы",
        "Разбросаны по памяти",
        "Не определено количество элементов"
    ],
    "Абстрактными называются структуры…": [
        "Динамические",
        "Нелинейные",
        "Атомарные",
        "Линейные"
    ],
    "Что не является статической структурой?": [
        "Стек",
        "Множество",
        "Запись",
        "Массив"
    ],
    "Назовите основные особенности односвязного списка:": [
        "Указатель дает адрес последующего элемента списка",
        "Указатель дает адрес предыдущего элемента списка",
        "Указатель дает адрес последнего элемента списка",
        "Указатель дает адрес первого элемента списка"
    ],
    "Какие операции нельзя производить над списками?": [
        "Умножение двух и более списков",
        "Удаление элемента из списка",
        "Поиск заданного элемента",
        "Добавление элемента к списку"
    ],
    "Для установления связи между элементами динамической структуры используются:": [
        "Указатели",
        "Начальный элемент",
        "Последний элемент",
        "Элементы"
    ],
    "Укажите неправильно указанные достоинство связного представления данных:": [
        "Постоянная область памяти",
        "При изменении логической последовательности не нужно перемещение данных",
        "Гибкость",
        "Размер структуры неограничен"
    ],
    "Дескриптор – это…": [
        "Указатель",
        "Элемент",
        "Номер элемента",
        "Количество элементов"
    ],
    "Как называется упорядоченное множество, состоящее из переменного числа элементов, к которым применимы операции включения, исключения:": [
        "Список",
        "Вектор",
        "Запись",
        "Массив"
    ],
    "Как называется элемент списка, по формату отличный от остальных элементов списка?": [
        "Голова списка",
        "Указатель",
        "Конец списка",
        "Информационное поле"
    ],
    "Рекурсивной называется подпрограмма, в которой содержится обращение к самой себе. Такая рекурсия называется…": [
        "Прямой",
        "Циклической",
        "Транзитивной",
        "Косвенной"
    ],
    "Когда две или более подпрограмм вызывают друг друга, такая рекурсия называется…": [
        "Косвенной",
        "Прямой",
        "Циклической",
        "Транзитивной"
    ],
    "Укажите неправильно названное достоинство программ, в которых используются рекурсивные подпрограммы:": [
        "Экономное использование памяти",
        "Наглядность",
        "Компактность кода",
        "Простота"
    ],
    "Глубина рекурсии – это…": [
        "Максимальное число рекурсивных вызовов подпрограммы без возвратов",
        "Число рекурсивных вызовов в каждый конкретный момент времени",
        "Общее количество рекурсивных вызовов во время работы программы",
        "Нет правильного ответа"
    ],
    "Текущий уровень рекурсии – это…": [
        "Число рекурсивных вызовов в каждый конкретный момент времени",
        "Общее количество рекурсивных вызовов во время работы программы",
        "Нет правильного ответа",
        "Максимальное число рекурсивных вызовов подпрограммы без возвратов"
    ],
    "Понятие сбалансированности дерева:": [
        "Длина любых двух путей от корня до листьев различается не более, чем на единицу",
        "Длина любых двух путей от корня до листьев равна",
        "Длина любых двух путей от корня до листьев различается на 2n",
        "Длина любых двух путей от корня до листьев различается на 2"
    ],
    "Ветви дерева - это": [
        "Связи между узлами",
        "Корень и его потомки",
        "Предки листа дерева",
        "Степень исхода узла"
    ],
    "Префиксная форма обхода дерева - это": [
        "Обход дерева сверху вниз",
        "Обход дерева в симметричном порядке",
        "Обход дерева в обратном порядке",
        "Полный обход дерева"
    ],
    "Инфиксная форма обхода дерева - это": [
        "Обход дерева в симметричном порядке",
        "Обход дерева сверху вниз",
        "Обход дерева в обратном порядке",
        "Полный обход дерева"
    ],
    "Постфиксная форма обхода дерева - это": [
        "Обход дерева в обратном порядке",
        "Обход дерева сверху вниз",
        "Обход дерева в симметричном порядке",
        "Полный обход дерева"
    ],
    "Внешняя сортировка - это": [
        "Сортировка во вторичной памяти",
        "Сортировка в кэш-памяти",
        "Сортировка в оперативной памяти",
        "Все ответы верны"
    ],
    "Запись таблицы – это…": [
        "Дескриптор страницы",
        "Номер логического блока",
        "Номер физического блока",
        "Все ответы верны"
    ],
    "Абстрактный математический объект, представляющий собой множество вершин и набор рёбер (соединений между парами вершин) – это…": [
        "Граф",
        "Сеть",
        "Многоугольник",
        "Пирамида"
    ],
    "Что такое граф?": [
        "Абстрактный математический объект, представляющий собой множество вершин и набор рёбер (соединений между парами вершин)",
        "Выполнение операций или группы операций, в результате которых изменяется значение, форма представления или расположение данных",
        "Преобразование данных в форму, пригодную для обработки или отображения результатов обработки",
        "Выбор направления выполнения алгоритма в зависимости от некоторых переменных условий"
    ],
    "Графы, в которых все рёбра являются звеньями (порядок двух концов ребра графа не существенен), называются …": [
        "Неориентированными",
        "Ориентированными",
        "Взвешенными",
        "Нулевыми"
    ],
    "Графы, в которых все рёбра являются дугами (порядок двух концов ребра графа существенен), называются …": [
        "Ориентированными",
        "Неориентированными",
        "Взвешенными",
        "Нулевыми"
    ],
    "Какие графы называются неориентированными?": [
        "Графы, в которых все рёбра являются звеньями (порядок двух концов ребра графа не существенен)",
        "Графы, в которых все рёбра являются дугами (порядок двух концов ребра графа существенен)",
        "Графы, содержащие только взвешенные рёбра",
        "Только классические графы"
    ],
    "Какие графы называются ориентированными?": [
        "Графы, в которых все рёбра являются дугами (порядок двух концов ребра графа существенен)",
        "Графы, в которых все рёбра являются звеньями (порядок двух концов ребра графа не существенен)",
        "Графы, содержащие только взвешенные рёбра",
        "Только классические графы"
    ],
    "Как называется алгоритм нахождения кратчайших путей из одного источника?": [
        "Алгоритм Дейкстры",
        "Алгоритм Крускала",
        "Алгоритм Прима",
        "Алгоритм Призма"
    ],
    "Как называется алгоритм построения минимального остова графа?": [
        "Алгоритм Крускала",
        "Алгоритм Дейкстры",
        "Алгоритм Прима",
        "Алгоритм Призма"
    ],
    "Как называется алгоритм ближайшего соседа?": [
        "Алгоритм Прима",
        "Алгоритм Крускала",
        "Алгоритм Дейкстры",
        "Алгоритм Призма"
    ],
    "Ненаправленная линия (без стрелки), соединяющая вершины графа – это…": [
        "Ребро",
        "Путь",
        "Цикл",
        "Дуга"
    ],
    "Последовательность рёбер и/или дуг графа, такая, что конец одной дуги (ребра) является началом другой дуги (ребра) – это…": [
        "Путь",
        "Ребро",
        "Цикл",
        "Дуга"
    ],
    "Путь, в котором совпадают начальная и конечная вершины графа – это…": [
        "Цикл",
        "Ребро",
        "Путь",
        "Дуга"
    ],
    "Направленная линия (со стрелкой), соединяющая вершины графа – это…": [
        "Дуга",
        "Ребро",
        "Путь",
        "Цикл"
    ],
    "Как называется Граф без ребер?": [
        "Пустой",
        "Нулевой",
        "Взвешенный",
        "Конечный"
    ],
    "Наглядное средство представления состава и структуры системы?": [
        "Граф",
        "График",
        "Программа",
        "Алгоритм"
    ],
    "Как называется Граф, в котором нет циклов?": [
        "Дерево",
        "Куст",
        "Сеть",
        "Ветвь"
    ],
    "Элемент (точка) графа, обозначающий объект любой природы, входящий в множество объектов, описываемое графом – это…": [
        "Вершина",
        "Конец",
        "Вес",
        "Ребро"
    ],
    "Граф, ребрам (или дугам) или вершинам которого поставлены в соответствие числовые величины, называется…": [
        "Взвешенный",
        "Пустой",
        "Нулевой",
        "Конечный"
    ],
    "Последовательность чередующихся вершин и ребер графа при перемещении – это…": [
        "Маршрут",
        "Цикл",
        "Путь",
        "Дорога"
    ],
    "Граф, в котором вершины соединены дугами называется …": [
        "Ориентированным",
        "Неориентированным",
        "Взвешенным",
        "Полным"
    ],
    "Граф, в котором каждые две вершины смежные называется …": [
        "Полным",
        "Неориентированным",
        "Взвешенным",
        "Ориентированным"
    ],
    "Вершины, прилегающие к одному и тому же ребру графа, называются …": [
        "Смежные",
        "Соседние",
        "Параллельные",
        "Перпендикулярные"
    ],
    "Подграф, включающий вершины исходного графа, не содержащего циклы, каждая вершина которого достижима из любой другой – это…": [
        "Остовное связное дерево",
        "Взвешенное дерево",
        "Ориентированное дерево",
        "Неориентированное дерево"
    ],
    "Недостаток последовательного поиска": [
        "В худшем случае осуществляется просмотр всего массива",
        "Прост в реализации, не требует сортировки значений множества, дополнительной памяти и дополнительного анализа функций",
        "Он применим только на отсортированных множествах",
        "Более низкая трудоемкость"
    ],
    "Достоинтсво последовательного поиска": [
        "Прост в реализации, не требует сортировки значений множества, дополнительной памяти и дополнительного анализа функций",
        "В худшем случае осуществляется просмотр всего массива",
        "Он применим только на отсортированных множествах",
        "Более низкая трудоемкость"
    ],
    "Недостаток бинарного поиска": [
        "Он применим только на отсортированных множествах",
        "Прост в реализации, не требует сортировки значений множества, дополнительной памяти и дополнительного анализа функций",
        "В худшем случае осуществляется просмотр всего массива",
        "Более низкая трудоемкость"
    ],
    "Достоинтсво бинарного поиска": [
        "Более низкая трудоемкость",
        "Прост в реализации, не требует сортировки значений множества, дополнительной памяти и дополнительного анализа функций",
        "Он применим только на отсортированных множествах",
        "В худшем случае осуществляется просмотр всего массива"
    ],
    "Какие ключи называются вторичные ключи?": [
        "Это ключи, не позволяющие однозначно идентифицировать запись в таблице.",
        "Это ключи, позволяющие однозначно идентифицировать запись.",
        "Это множество тех ячеек памяти, которые выделяются для хранения таблицы.",
        "Это множество всех теоретически возможных значений ключей записи."
    ],
    "Какие ключи называются первичные ключи?": [
        "Это ключи, позволяющие однозначно идентифицировать запись.",
        "Это ключи, не позволяющие однозначно идентифицировать запись в таблице.",
        "Это множество тех ячеек памяти, которые выделяются для хранения таблицы.",
        "Это множество всех теоретически возможных значений ключей записи."
    ],
    "Как по-другому называется метод открытой адресации?": [
        "Закрытое хэширование",
        "Открытое хеширование",
        "Метод цепочек",
        "Повторное хеширование"
    ],
    "Закрытое хэширование – это …": [
        "технология разрешения коллизий, которая предполагает хранение записей в самой хэш-таблице.",
        "ситуация, когда разным ключам соответствует одно значение хэш-функции.",
        "это технология разрешения коллизий, которая состоит в том, что элементы множества с равными хэш-значениями связываются в цепочку-список.",
        "это поиск местоположения для очередного элемента таблицы с учетом шага перемещения."
    ],
    "Коллизия – это …": [
        "ситуация, когда разным ключам соответствует одно значение хэш-функции.",
        "технология разрешения коллизий, которая предполагает хранение записей в самой хэш-таблице.",
        "это технология разрешения коллизий, которая состоит в том, что элементы множества с равными хэш-значениями связываются в цепочку-список.",
        "это поиск местоположения для очередного элемента таблицы с учетом шага перемещения."
    ],
    "Как по-другому называется метод цепочек?": [
        "Открытое хеширование",
        "Закрытое хэширование",
        "Метод открытой адресации",
        "Повторное хеширование"
    ],
    "Открытое хеширование – это …": [
        " технология разрешения коллизий, которая состоит в том, что элементы множества с равными хэш-значениями связываются в цепочку-список.",
        "ситуация, когда разным ключам соответствует одно значение хэш-функции.",
        "технология разрешения коллизий, которая предполагает хранение записей в самой хэш-таблице.",
        "поиск местоположения для очередного элемента таблицы с учетом шага перемещения."
    ],
    "Повторное хеширование – это …": [
        "поиск местоположения для очередного элемента таблицы с учетом шага перемещения.",
        "ситуация, когда разным ключам соответствует одно значение хэш-функции.",
        "технология разрешения коллизий, которая состоит в том, что элементы множества с равными хэш-значениями связываются в цепочку-список.",
        "технология разрешения коллизий, которая предполагает хранение записей в самой хэш-таблице."
    ],
    "Что такое пространство записей?": [
        "Это множество тех ячеек памяти, которые выделяются для хранения таблицы.",
        "Это ключи, позволяющие однозначно идентифицировать запись.",
        "Это ключи, не позволяющие однозначно идентифицировать запись в таблице.",
        "Это множество всех теоретически возможных значений ключей записи."
    ],
    "Что такое пространство ключей?": [
        "Это множество всех теоретически возможных значений ключей записи.",
        "Это ключи, позволяющие однозначно идентифицировать запись.",
        "Это множество тех ячеек памяти, которые выделяются для хранения таблицы.",
        "Это ключи, не позволяющие однозначно идентифицировать запись в таблице."
    ],
    "Что такое Хеширование?": [
        "это преобразование входного массива данных определенного типа и произвольной длины в выходную битовую строку фиксированной длины.",
        "это количество хранимых элементов массива, деленное на число возможных значений хэш-функции.",
        "это структура данных, реализующая интерфейс ассоциативного массива, то есть она позволяет хранить пары вида \"ключ- значение\" и выполнять три операции: операцию добавления новой пары, операцию поиска и операцию удаления пары по ключу.",
        "это хэш-таблицы, использующие инъективные хэш-функции и не нуждающиеся в механизме разрешения коллизий."
    ],
    "Что такое Коэффициент заполнения хэш-таблицы?": [
        "это количество хранимых элементов массива, деленное на число возможных значений хэш-функции.",
        "это преобразование входного массива данных определенного типа и произвольной длины в выходную битовую строку фиксированной длины.",
        "это структура данных, реализующая интерфейс ассоциативного массива, то есть она позволяет хранить пары вида \"ключ- значение\" и выполнять три операции: операцию добавления новой пары, операцию поиска и операцию удаления пары по ключу.",
        "это хэш-таблицы, использующие инъективные хэш-функции и не нуждающиеся в механизме разрешения коллизий."
    ],
    "Что такое Хеш-таблица?": [
        "это структура данных, реализующая интерфейс ассоциативного массива, то есть она позволяет хранить пары вида \"ключ- значение\" и выполнять три операции: операцию добавления новой пары, операцию поиска и операцию удаления пары по ключу.",
        "это количество хранимых элементов массива, деленное на число возможных значений хэш-функции.",
        "это преобразование входного массива данных определенного типа и произвольной длины в выходную битовую строку фиксированной длины.",
        "это хэш-таблицы, использующие инъективные хэш-функции и не нуждающиеся в механизме разрешения коллизий."
    ],
    "Что такое Хэш-таблицы с прямой адресацией?": [
        "это хэш-таблицы, использующие инъективные хэш-функции и не нуждающиеся в механизме разрешения коллизий.",
        "это количество хранимых элементов массива, деленное на число возможных значений хэш-функции.",
        "это структура данных, реализующая интерфейс ассоциативного массива, то есть она позволяет хранить пары вида \"ключ- значение\" и выполнять три операции: операцию добавления новой пары, операцию поиска и операцию удаления пары по ключу.",
        "это преобразование входного массива данных определенного типа и произвольной длины в выходную битовую строку фиксированной длины."
    ],
    "Алгоритм для упорядочения некоторого множества элементов называют…": [
        "алгоритмом сортировки",
        "алгоритмом поиска",
        "алгоритмом программирования",
        "алгоритмом построения функции"
    ],
    "Бинарная пирамидальная сортировка – это …": [
        "алгоритм внутренней сортировки, основанный на построении пирамиды и просеивании элементов из ее вершины методом спуска вниз в соответствии с ключом сортировки.",
        "общее название ряда алгоритмов, которые отражают различные подходы к получению критичного параметра, влияющего на производительность метода.",
        "алгоритм сортировки, который при проведении упорядочивания данных использует внешнюю память, как правило, жесткие диски.",
        "алгоритм сортировки, который в процессе упорядочивания данных использует только оперативную память (ОЗУ) компьютера."
    ],
    "Быстрая сортировка – это …": [
        "общее название ряда алгоритмов, которые отражают различные подходы к получению критичного параметра, влияющего на производительность метода.",
        "алгоритм внутренней сортировки, основанный на построении пирамиды и просеивании элементов из ее вершины методом спуска вниз в соответствии с ключом сортировки.",
        "алгоритм сортировки, который при проведении упорядочивания данных использует внешнюю память, как правило, жесткие диски.",
        "алгоритм сортировки, который в процессе упорядочивания данных использует только оперативную память (ОЗУ) компьютера."
    ],
    "Внешняя сортировка – это …": [
        "алгоритм сортировки, который при проведении упорядочивания данных использует внешнюю память, как правило, жесткие диски.",
        "общее название ряда алгоритмов, которые отражают различные подходы к получению критичного параметра, влияющего на производительность метода.",
        "алгоритм внутренней сортировки, основанный на построении пирамиды и просеивании элементов из ее вершины методом спуска вниз в соответствии с ключом сортировки.",
        "алгоритм сортировки, который в процессе упорядочивания данных использует только оперативную память (ОЗУ) компьютера."
    ],
    "Внутренняя сортировка – это …": [
        "алгоритм сортировки, который в процессе упорядочивания данных использует только оперативную память (ОЗУ) компьютера.",
        "общее название ряда алгоритмов, которые отражают различные подходы к получению критичного параметра, влияющего на производительность метода.",
        "алгоритм сортировки, который при проведении упорядочивания данных использует внешнюю память, как правило, жесткие диски.",
        "алгоритм внутренней сортировки, основанный на построении пирамиды и просеивании элементов из ее вершины методом спуска вниз в соответствии с ключом сортировки."
    ],
    "Сортировка слиянием – это …": [
        "одна из разновидностей алгоритмов быстрых сортировок, основанная на слиянии подмножеств массива.",
        "сортировка данных, которые расположены на внешних устройствах и не вмещающихся в оперативную память.",
        "одна из разновидностей быстрых сортировок, основанная на упорядочивании подмножеств массива относительно опорных элементов.",
        "алгоритм внутренней сортировки, основанный на сравнении и перемещении пар значений, расположенных сначала достаточно далеко друг от друга в упорядочиваемом наборе данных, с дальнейшим сокращением расстояний между ними."
    ],
    "Внешняя сортировка – это …": [
        "сортировка данных, которые расположены на внешних устройствах и не вмещающихся в оперативную память.",
        "одна из разновидностей алгоритмов быстрых сортировок, основанная на слиянии подмножеств массива.",
        "одна из разновидностей быстрых сортировок, основанная на упорядочивании подмножеств массива относительно опорных элементов.",
        "алгоритм внутренней сортировки, основанный на сравнении и перемещении пар значений, расположенных сначала достаточно далеко друг от друга в упорядочиваемом наборе данных, с дальнейшим сокращением расстояний между ними."
    ],
    "Сортировка Хоара – это …": [
        "одна из разновидностей быстрых сортировок, основанная на упорядочивании подмножеств массива относительно опорных элементов.",
        "сортировка данных, которые расположены на внешних устройствах и не вмещающихся в оперативную память.",
        "одна из разновидностей алгоритмов быстрых сортировок, основанная на слиянии подмножеств массива.",
        "алгоритм внутренней сортировки, основанный на сравнении и перемещении пар значений, расположенных сначала достаточно далеко друг от друга в упорядочиваемом наборе данных, с дальнейшим сокращением расстояний между ними."
    ],
    "Сортировка Шелла – это …": [
        "алгоритм внутренней сортировки, основанный на сравнении и перемещении пар значений, расположенных сначала достаточно далеко друг от друга в упорядочиваемом наборе данных, с дальнейшим сокращением расстояний между ними.",
        "сортировка данных, которые расположены на внешних устройствах и не вмещающихся в оперативную память.",
        "одна из разновидностей быстрых сортировок, основанная на упорядочивании подмножеств массива относительно опорных элементов.",
        "одна из разновидностей алгоритмов быстрых сортировок, основанная на слиянии подмножеств массива."
    ],
    "Основной параметр трудоемкости алгоритма, характеризующий быстродействие алгоритма сортировки, называется…": [
        "Время сортировки",
        "Естественность поведения",
        "Ключ сортировки",
        "Устойчивость"
    ],
    "Один из параметров трудоемкости алгоритма, которой указывает на эффективность метода при обработке уже отсортированных, или частично отсортированных данных, называется…": [
        "Естественность поведения",
        "Время сортировки",
        "Ключ сортировки",
        "Устойчивость"
    ],
    "Один из параметров трудоемкости алгоритма, который характеризует то, что сортировка не меняет взаимного расположения равных элементов, называется…": [
        "Устойчивость",
        "Естественность поведения",
        "Ключ сортировки",
        "Время сортировки"
    ],
    "Какой используется атрибут (или несколько атрибутов), по значению которого определяется порядок элементов во множестве?": [
        "Ключ сортировки",
        "Естественность поведения",
        "Время сортировки",
        "Просеивание"
    ],
    "Что используется для объединения двух или более упорядоченных массивов в один упорядоченный?": [
        "Слияние",
        "Просеивание",
        "Разбиение",
        "Распределение"
    ],
    "Какой процесс подразумевает процесс разделения упорядоченных серий на два и несколько вспомогательных файла": [
        "Распределение",
        "Просеивание",
        "Разбиение",
        "Слияние"
    ],
    "Рекурсивная триада – это …": [
        "этапы решения задач рекурсивным методом.",
        "функция, которая в своем теле содержит обращение к самой себе с измененным набором параметров.",
        "алгоритм, в определении которого содержится прямой или косвенный вызов этого же алгоритма.",
        "область памяти, предназначенная для хранения всех промежуточных значений локальных переменных при каждом следующем рекурсивном обращении."
    ],
    "Рекурсивная функция – это …": [
        "функция, которая в своем теле содержит обращение к самой себе с измененным набором параметров.",
        "этапы решения задач рекурсивным методом.",
        "алгоритм, в определении которого содержится прямой или косвенный вызов этого же алгоритма.",
        "область памяти, предназначенная для хранения всех промежуточных значений локальных переменных при каждом следующем рекурсивном обращении."
    ],
    "Рекурсивный алгоритм – это …": [
        "алгоритм, в определении которого содержится прямой или косвенный вызов этого же алгоритма.",
        "функция, которая в своем теле содержит обращение к самой себе с измененным набором параметров.",
        "этапы решения задач рекурсивным методом.",
        "область памяти, предназначенная для хранения всех промежуточных значений локальных переменных при каждом следующем рекурсивном обращении."
    ],
    "Рекурсивный стек – это …": [
        "область памяти, предназначенная для хранения всех промежуточных значений локальных переменных при каждом следующем рекурсивном обращении.",
        "функция, которая в своем теле содержит обращение к самой себе с измененным набором параметров.",
        "алгоритм, в определении которого содержится прямой или косвенный вызов этого же алгоритма.",
        "этапы решения задач рекурсивным методом."
    ],
    "Как называется тривиальный случай, при котором решение задачи очевидно, то есть не требуется обращение функции к себе?": [
        "База рекурсии",
        "Декомпозиция",
        "Параметризация",
        "Косвенная (взаимная) рекурсия"
    ],
    "Как называется выражение общего случая через более простые подзадачи с измененными параметрами?": [
        "Декомпозиция",
        "База рекурсии",
        "Параметризация",
        "Косвенная (взаимная) рекурсия"
    ],
    "Что называется выделением из постановки задачи параметров, которые используются для описания условия задачи и решения?": [
        "Параметризация",
        "Декомпозиция",
        "База рекурсии",
        "Косвенная (взаимная) рекурсия"
    ],
    "Косвенная (взаимная) рекурсия – это …": [
        "последовательность взаимных вызовов нескольких функций, организованная в виде циклического замыкания на тело первоначальной функции, но с иным набором параметров.",
        "непосредственное обращение рекурсивной функции к себе, но с иным набором входных данных.",
        "пошаговое разбиение задачи на подзадачи, подобные исходной.",
        "определение объекта посредством ссылки на себя."
    ],
    "Прямая рекурсия – это …": [
        "непосредственное обращение рекурсивной функции к себе, но с иным набором входных данных.",
        "последовательность взаимных вызовов нескольких функций, организованная в виде циклического замыкания на тело первоначальной функции, но с иным набором параметров.",
        "пошаговое разбиение задачи на подзадачи, подобные исходной.",
        "определение объекта посредством ссылки на себя."
    ],
    "Как называется Рекурсия в программировании?": [
        "пошаговое разбиение задачи на подзадачи, подобные исходной.",
        "непосредственное обращение рекурсивной функции к себе, но с иным набором входных данных.",
        "последовательность взаимных вызовов нескольких функций, организованная в виде циклического замыкания на тело первоначальной функции, но с иным набором параметров.",
        "определение объекта посредством ссылки на себя."
    ],
    "Дайте определение Рекурсии в широком смысле": [
        "определение объекта посредством ссылки на себя.",
        "непосредственное обращение рекурсивной функции к себе, но с иным набором входных данных.",
        "пошаговое разбиение задачи на подзадачи, подобные исходной.",
        "последовательность взаимных вызовов нескольких функций, организованная в виде циклического замыкания на тело первоначальной функции, но с иным набором параметров."
    ],
    "Какими свойствами рекурсивности характеризуются объекты окружающего мира?": [
        "Обладают самоподобием",
        "Они абсолютно идентичны",
        "Имеют широкий спектр одинаковых свойств",
        "Таких объектов в мире не существует"
    ],
    "Посредством чего проводится решение задач рекурсивными способами?": [
        "Посредством разработки рекурсивной триады.",
        "Посредством построения графов.",
        "Посредством написания программного кода.",
        "Посредством разработки рекурсивного дерева."
    ],
    "В какой период была разработана стандартная библиотека шаблонов STL?": [
        "с 1979 по 1994 год",
        "с 1989 по 2004 год",
        "с 1999 по 2014 год",
        "с 2000 по 2020 год"
    ],
    "Чьей стронное разработкой, до включения в стандарт С++, была библиотека стандартных шаблонов?": [
        "В начале — фирмы HP, а затем SGI",
        "В начале — фирмы SGI, а затем HP",
        "В начале — фирмы Аpple, а затем Miсrоsоft",
        "В начале — фирмы Miсrоsоft, а затем Аpple"
    ],
    "Кто считается основным разработчиком стандартной библиотеки шаблонов STL?": [
        "Александр Александрович Степанов",
        "Евгений Валентинович Касперский",
        "Дмитрий Витальевич Скляров",
        "Игорь Анатольевич Данилов"
    ],
    "В каком году STL стала частью официального стандарта языка С++?": [
        "В 1994 году",
        "В 1984 году",
        "В 2004 году",
        "В 2014 году"
    ],
    "Выберете ответ, в котором перечислены разработчики стандартной библиотеки шаблонов STL": [
        "Александр Александрович Степанов, Мень Ли, Дэвид Мюссер",
        "Евгений Валентинович Касперский, Сэр Тим Бернерс-Ли, Брэм Коэн",
        "Дмитрий Витальевич Скляров, Брендан Айк, Дональд Кнут",
        "Игорь Анатольевич Данилов, Линус Торвальдс, Марк Цукерберг"
    ],
    "Сколько основных компонентов содержит Библиотека STL?": [
        "5",
        "6",
        "7",
        "8"
    ],
    "Какие распространенные структуры данных представляют собой контейнеры?": [
        "массивы, списки, стеки, очереди",
        "указатели, ссылки, адреса",
        "деревья, графы",
        "таблицы, базы данных"
    ],
    "Какие компоненты библиотеки STL являются аналогами указателей и используются для перебора элементов STL-контейнеров?": [
        "Итераторы",
        "Адаптеры",
        "Конструкторы",
        "Деструкторы"
    ],
    "Какие компоненты библиотеки STL используются для адаптации компонентов для обеспечения различного интерфейса?": [
        "Адаптеры",
        "Итераторы",
        "Конструкторы",
        "Деструкторы"
    ],
    "Для чего применяется функциональный объект?": [
        "Сокрытие функции в объекте для использования другими компонентами.",
        "Адаптация компонентов для обеспечения различного интерфейса",
        "Являются аналогами указателей и используются для перебора элементов STL-контейнеров",
        "Для поиска элементов STL-контейнеров"
    ],
    "На сколько основных категорий можно разделить контейнеры?": [
        "4",
        "2",
        "3",
        "1"
    ],
    "Какие линейные структуры данных представляют Контейнеры последовательностей?": [
        "векторы, списки, деки",
        "множества, словари",
        "стеки, очереди",
        "деревья, графы, таблицы"
    ],
    "Какие нелинейные структуры данных представляют Ассоциативные контейнеры?": [
        "множества, словари",
        "векторы, списки, деки",
        "стеки, очереди",
        "деревья, графы, таблицы"
    ],
    "Какие данные представляют собой ограниченные варианты контейнеров последовательностей - Адаптеры контейнеров?": [
        "стеки, очереди",
        "множества, словари",
        "векторы, списки, деки",
        "деревья, графы, таблицы"
    ],
    "Какие контейнеры являются нелинейными структурами, которые позволяют быстро отыскивать хранящиеся в них элементы?": [
        "Ассоциативные контейнеры",
        "Контейнеры последовательностей",
        "Адаптеры контейнеров",
        "Псевдоконтейнеры"
    ],
    "Какие контейнеры представляют собой ограниченные варианты контейнеров последовательностей?": [
        "Адаптеры контейнеров",
        "Контейнеры последовательностей",
        "Ассоциативные контейнеры",
        "Псевдоконтейнеры"
    ],
    "Какой класс контейнера не относится к Контейнерам последовательностей?": [
        "Множество: быстрый поиск, не допускает дубликатов",
        "Список: двусвязный список, быстрая вставка и удаление в любом месте",
        "Кортеж: быстрая вставка и удаление в начале или конце; прямой доступ к любому элементу",
        "Вектор: быстрая вставка и удаление в конце; прямой доступ к любому элементу"
    ],
    "Входной итератор:": [
        "Используется для ввода данных в контейнер; продвигается только в прямом направлении на один элемент за шаг",
        "Используется для вывода данных из контейнера; продвигается только в прямом направлении на один элемент за шаг",
        "Комбинирует возможности входного и выходного итераторов и хранит их позицию в контейнере",
        "Комбинирует возможности поступательного итератора со способностью двигаться в обратном направлении"
    ],
    "Выходной итератор:": [
        "Используется для вывода данных из контейнера; продвигается только в прямом направлении на один элемент за шаг",
        "Используется для ввода данных в контейнер; продвигается только в прямом направлении на один элемент за шаг",
        "Комбинирует возможности поступательного итератора со способностью двигаться в обратном направлении",
        "Комбинирует возможности двунаправленного итератора с возможностью прямого доступа к любому элементу контейнера"
    ],
    "Поступательный итератор:": [
        "Комбинирует возможности входного и выходного итераторов и хранит их позицию в контейнере",
        "Используется для вывода данных из контейнера; продвигается только в прямом направлении на один элемент за шаг",
        "Комбинирует возможности поступательного итератора со способностью двигаться в обратном направлении",
        "Комбинирует возможности двунаправленного итератора с возможностью прямого доступа к любому элементу контейнера"
    ],
    "Двунаправленный итератор:": [
        "Комбинирует возможности поступательного итератора со способностью двигаться в обратном направлении",
        "Комбинирует возможности входного и выходного итераторов и хранит их позицию в контейнере",
        "Используется для ввода данных в контейнер; продвигается только в прямом направлении на один элемент за шаг",
        "Комбинирует возможности двунаправленного итератора с возможностью прямого доступа к любому элементу контейнера"
    ],
    "Произвольного доступа итератор:": [
        "Комбинирует возможности двунаправленного итератора с возможностью прямого доступа к любому элементу контейнера",
        "Используется для вывода данных из контейнера; продвигается только в прямом направлении на один элемент за шаг",
        "Комбинирует возможности поступательного итератора со способностью двигаться в обратном направлении",
        "Используется для ввода данных в контейнер; продвигается только в прямом направлении на один элемент за шаг"
    ],
    "Каждый элемент дерева является:": [
        "Вершиной дерева",
        "Дугой дерева",
        "Веткой дерева",
        "Корнем дерева"
    ],
    "Что называется уровнем вершины дерева?": [
        "Количество дуг от корня дерева до вершины.",
        "Максимальная степень вершин, входящих в дерево.",
        "Количество дуг, которое выходит из этой вершины.",
        "Количество уровней, на которых располагаются его вершины."
    ],
    "Что называется Высотой (глубиной) дерева?": [
        "Количество уровней, на которых располагаются его вершины.",
        "Количество дуг, которое выходит из этой вершины.",
        "Вершина, из которой исходят ветви к вершинам следующего уровня.",
        "Количество дуг от корня дерева до вершины."
    ],
    "Что называется степенью вершины дерева?": [
        "Количество дуг, которое выходит из этой вершины.",
        "Количество дуг от корня дерева до вершины.",
        "Максимальная степень вершин, входящих в дерево.",
        "Количество уровней, на которых располагаются его вершины."
    ],
    "Что называется степенью дерева?": [
        "Максимальная степень вершин, входящих в дерево.",
        "Количество дуг, которое выходит из этой вершины.",
        "Количество дуг от корня дерева до вершины.",
        "Количество уровней, на которых располагаются его вершины."
    ],
    "Какому элементу дерева соответствует нулевой уровень?": [
        "Корень дерева",
        "Листья дерева",
        "Дуга дерева",
        "Ветка дерева"
    ],
    "Как называются вершины, в которые входит одна ветвь и не выходит ни одной ветви?": [
        "Листья дерева",
        "Корень дерева",
        "Дуга дерева",
        "Ветка дерева"
    ],
    "Сколько раз за один обход можно посетить каждую вершину дерева?": [
        "Один раз",
        "Ни разу",
        "Два раза",
        "Бесконечное множество раз"
    ],
    "Упорядоченная последовательность вершин дерева, в которой каждая вершина встречается только один раз – это…": [
        "Обход дерева",
        "Проход дерева",
        "Основное дерево",
        "Путь дерева"
    ],
    "Какой ответ не подходит под определение: все вершины, в которые входят ветви, исходящие из одной общей вершины, называются…": [
        "Предки",
        "Братья",
        "Сестры",
        "Потомки"
    ],
    "Как называется вершина, из которой исходят ветви к вершинам следующего уровня?": [
        "Предки",
        "Братья",
        "Сестры",
        "Потомки"
    ],
    "Почти сбалансированное дерево – это …": [
        "дерево, у которого длины всевозможных путей от корня к внешним вершинам отличаются не более, чем на единицу.",
        "дерево, у которого длины всех путей от корня к внешним вершинам равны между собой.",
        "дерево, у которого вершины имеют степень ноль (у листьев) или два (у узлов).",
        "дерево, у которого ветви, исходящие из каждой вершины, упорядочены по определенному критерию."
    ],
    "Сбалансированное дерево – это …": [
        "дерево, у которого длины всех путей от корня к внешним вершинам равны между собой.",
        "дерево, у которого длины всевозможных путей от корня к внешним вершинам отличаются не более, чем на единицу.",
        "дерево, у которого вершины имеют степень ноль (у листьев) или два (у узлов).",
        "дерево, у которого ветви, исходящие из каждой вершины, упорядочены по определенному критерию."
    ],
    "Строгое бинарное дерево – это …": [
        "дерево, у которого вершины имеют степень ноль (у листьев) или два (у узлов).",
        "дерево, у которого длины всех путей от корня к внешним вершинам равны между собой.",
        "дерево, у которого длины всевозможных путей от корня к внешним вершинам отличаются не более, чем на единицу.",
        "дерево, у которого ветви, исходящие из каждой вершины, упорядочены по определенному критерию."
    ],
    "Упорядоченное дерево – это …": [
        "дерево, у которого ветви, исходящие из каждой вершины, упорядочены по определенному критерию.",
        "дерево, у которого длины всех путей от корня к внешним вершинам равны между собой.",
        "дерево, у которого вершины имеют степень ноль (у листьев) или два (у узлов).",
        "дерево, у которого длины всевозможных путей от корня к внешним вершинам отличаются не более, чем на единицу."
    ],
    "Теория графов является разделом:": [
        "дискретной математики",
        "элементарной математики",
        "математического анализа",
        "экономического анализа"
    ],
    "Родоначальником теории графов считается:": [
        "Эйлер",
        "Кениг",
        "Гамильтон",
        "Берж"
    ],
    "Математическая формализация понятия графа дана:": [
        "Кенигом",
        "Эйлером",
        "Гамильтоном",
        "Бержем"
    ],
    "Какой из графов нельзя начертить одним росчерком:": [
        "граф с более, чем двумя нечетными вершинами",
        "граф с одной нечетной вершиной",
        "граф с двумя нечетными вершинами",
        "граф, все вершины которого четные"
    ],
    "Эйлер доказал, что задача о семи кенигсбергских мостах:": [
        "не имеет решений",
        "имеет несколько решений",
        "имеет бесконечно много решений",
        "имеет одно решение"
    ],
    "Матрица смежности представляет собой таблицу, у которой:": [
        "число строк равно числу вершин, а число столбцов – числу ребер графа",
        "число строк и столбцов равно числу вершин графа",
        "число столбцов равно числу вершин, а число строк – числу шагов работы алгоритма отыскания кратчайшего пути",
        "число строк и столбцов равно нулю"
    ],
    "Графом называется…": [
        "пара двух конечных множеств: множество точек и множество линий, соединяющих некоторые пары точек;",
        "пара двух бесконечных множеств: множество точек и множество линий, соединяющих некоторые пары точек;",
        "множество линий, соединяющих некоторые пары точек;",
        "пара двух конечных множеств: множество точек и множество линий."
    ],
    "Точки графа называются…": [
        "узлами",
        "линиями",
        "векторами",
        "ребрами"
    ],
    "Линии графа называются…": [
        "ребрами",
        "точками",
        "узлами",
        "метками"
    ],
    "Если ребро графа соединяет две его вершины, то говорят, что это ребро им…": [
        "инцидентно",
        "идентично",
        "совместимо",
        "смежно"
    ],
    "Если существует ребро, инцидентное двум вершинам графа, то эти вершины являются…": [
        "смежными",
        "соседними",
        "инцидентными",
        "связными"
    ],
    "Ребро, имеющее совпадающие начало и конец, называется…": [
        "петлей",
        "циклом",
        "узлом",
        "направлением"
    ],
    "Ребра называются смежными, если они...": [
        "инцидентны одной и той же вершине",
        "параллельны",
        "являются кратными",
        "пересекаются в одном узле"
    ],
    "Простая цепь это:": [
        "маршрут, где нет повторяющихся вершин и ребер.",
        "маршрут, где нет повторяющихся вершин;",
        "маршрут, где нет повторяющихся ребер;",
        "маршрут минимальной стоимости;"
    ],
    "Расстояние между вершинами есть...": [
        "длина кратчайшего пути",
        "сумма длин ребер, входящих в путь",
        "разница длин ребер, входящих в путь",
        "длина самого длинного пути"
    ],
    "Дерево есть...": [
        "связный граф без циклов",
        "граф без циклов",
        "остовный подграф графа",
        "связный граф"
    ],
    "Если любые две вершины графа можно соединить простой цепью, то граф называется:": [
        "связным",
        "несвязным",
        "деревом",
        "остовом"
    ],
    "Ребра называются кратными, если они...": [
        "имеют одинаковые направления",
        "параллельны",
        "являются смежными",
        "инцидентны одной и той же вершине"
    ],
    "Конечный связный граф с выделенной вершиной (корнем), не имеющий циклов, называют…": [
        "Деревом",
        "Списком",
        "Таблицей",
        "Массивом"
    ],
    "В графе из n вершин остов содержит:": [
        "n-1 ребро",
        "n+1 ребро",
        "n ребер",
        "2n ребер"
    ],
    "Упорядоченное объединение деревьев, представляющее собой несвязный граф, называется…": [
        "лесом",
        "поляной",
        "рощей",
        "садом"
    ],
    "Дерево, в котором поддеревья каждого узла образуют упорядоченное подмножество называется…": [
        "упорядоченным",
        "порядковым",
        "пронумерованным",
        "исчисляемым"
    ],
    "Если каждая из вершин неориентированного графа соединена рёбрами с остальными, то такой граф называется:": [
        "полным графом",
        "мультиграфом",
        "цепью",
        "гиперграфом"
    ],
    "Последовательность ребер, в которой каждые два соседних ребра имеют общую вершину, и никакое ребро не встречается более одного раза – это…": [
        "путь",
        "цикл",
        "дорога",
        "прекция"
    ],
    "После удаления из дерева одной из концевых вершин вместе с инцидентным ей ребром  получается:": [
        "дерево",
        "орграф",
        "цепь",
        "связь"
    ],
    "Висячие вершины дерева, за исключением корневой, называются...": [
        "листьями",
        "братьями",
        "ветками",
        "потомками"
    ],
    "Для того чтобы связный граф G являлся простым циклом, необходимо и достаточно, чтобы каждая его вершина имела степень, равную:": [
        "0",
        "1",
        "3",
        "2"
    ],
    "Любой  подграф  связного графа G, содержащий все вершины графа G и являющийся деревом, называется…": [
        "остов",
        "скелет",
        "корень",
        "путь"
    ],
    "Если вершине инцидентна петля, то степень этой вершины равна:": [
        "2",
        "1",
        "0",
        "3"
    ],
    "Вершина графа, имеющая степень, равную нулю, называется:": [
        "изолированной;",
        "отдельной;",
        "нулевой;",
        "висячей."
    ],
    "Граф, состоящий из изолированных вершин, называется...": [
        "нуль-граф",
        "лесом",
        "деревом",
        "цикл-графом"
    ],
    "Вершина графа, имеющая степень, равную 1, называется:": [
        "висячей",
        "изолированной",
        "свободной",
        "связной"
    ]
}